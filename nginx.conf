events {
    worker_connections 1024;
}

http {

    # API SERVICES SERVER
    upstream api_1 {
        server api1_instance_1:3030 weight=1;
        server api1_instance_2:3030 weight=1;
    }

    limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;

    server {
        listen 80;
        server_name localhost;

        location /api1/ {
            limit_req zone=one burst=10 nodelay;
            
            proxy_pass http://api_1/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api2/ {
            limit_req zone=one burst=10 nodelay;
            
            proxy_pass http://api2:3031/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        error_page 429 = @rate_limit_exceeded;
        location @rate_limit_exceeded {
            return 429 "Rate limit exceeded. Please try again later.";
        }
    }

    # GRPC SERVER
    upstream grpcservers {
        server api1_instance_1:9090 weight=1;
        server api1_instance_2:9090 weight=1;
    }

    server {
        listen 9090;
        http2 on;

        location / {
            grpc_pass grpc://grpcservers;
        }
    }
}

