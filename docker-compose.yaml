version: "3.9"

networks:
  nginx_net:
    driver: bridge

services:
  nginx:
    image: nginx:1.26.0-alpine-slim
    ports:
      - 8080:80
      - 9090:9090
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - nginx_net
    depends_on:
      - api1_instance_1
      - api1_instance_2
      - api2

  api1_instance_1:
    build:
      context: ./users-transactions-api
      dockerfile: Dockerfile
    environment:
      PORT: ${API1_PORT}
      GRPC_PORT: ${GRPC_PORT}
    depends_on:
      database:
        condition: service_healthy
    networks:
      - nginx_net

  api1_instance_2:
    build:
      context: ./users-transactions-api
      dockerfile: Dockerfile
    environment:
      PORT: ${API1_PORT}
      GRPC_PORT: ${GRPC_PORT}
    depends_on:
      database:
        condition: service_healthy
    networks:
      - nginx_net
  
  api2:
    build:
      context: ./pdf-generator-api
      dockerfile: Dockerfile
    environment:
      PORT: ${API2_PORT}
      GRPC_PORT: ${GRPC_PORT}
    networks:
      - nginx_net
    depends_on:
      - api1_instance_1
      - api1_instance_2

  database:
    image: postgres:16-alpine
    container_name: db-postgresql
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USERNAME}"]
      interval: 3s
      timeout: 5s
      retries: 5
    networks:
      - nginx_net